version: '3.7'
networks:
  network1:  
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.11.0/24"
  network2:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.33.0/24"
  network3:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.44.0/24"
  network4:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.55.0/24"

# networks: 
#   network1:  
#     name: network1
#   network2:
#     name: network2
        
services:
  router1:
    container_name: router1
    volumes: 
      - .:/dev/cs33031
    networks:
      - network1
      - network2
    image: openjdk:15
    working_dir: /dev/cs33031/src/
    environment:
      - name=router1
    command: >
              sh -c "java -cp ../bin Applications.RouterImplementation.RouterImplementation $$name"
    depends_on:
      - router2

  router2:
    container_name: router2
    volumes: 
      - .:/dev/cs33031
    image: openjdk:15
    working_dir: /dev/cs33031/src/
    environment:
      - name=router2
    command: >
              sh -c "java -cp ../bin Applications.RouterImplementation.RouterImplementation $$name"
    networks:
      - network2
      - network3
    depends_on:
      - endpointreceiver

  router3:
    container_name: router3
    volumes: 
      - .:/dev/cs33031
    image: openjdk:15
    working_dir: /dev/cs33031/src/
    environment:
      - name=router3
    command: >
              sh -c "java -cp ../bin Applications.RouterImplementation.RouterImplementation $$name"
    networks:
      - network3
      - network4
    depends_on:
      - router1

  endpointsender:
    container_name: endpointsender
    volumes: 
      - .:/dev/cs33031
    image: openjdk:15
    working_dir: /dev/cs33031/src/
    command: >
              sh -c "java -cp ../bin Applications.EndpointSenderTest.EndpointSenderTest"
    networks:
      - network1
    depends_on:
      - router3

  endpointreceiver:
    container_name: endpointreceiver
    volumes: 
      - .:/dev/cs33031
    image: openjdk:15
    working_dir: /dev/cs33031/src/
    command: >
              sh -c "java -cp ../bin Applications.EndpointReceiverTest.EndpointReceiverTest"
    networks:
      - network4
    depends_on:
      - controller

  controller:
    container_name: controller
    volumes: 
      - .:/dev/cs33031
    image: openjdk:15
    working_dir: /dev/cs33031/src/
    command: >
              sh -c "java -cp ../bin Applications.ControllerTest.ControllerTest"
    networks:
      - network1
      - network2
      - network3
      - network4

  # wireshark:
  #   image: lscr.io/linuxserver/wireshark
  #   container_name: wireshark
  #   cap_add:
  #     - NET_ADMIN
  #   network_mode: host
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #   volumes:
  #     - /path/to/config:/config
  #   ports:
  #     - 3000:3000 #optional
  #   restart: unless-stopped
